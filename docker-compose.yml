version: '3'

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper:
    networks:
      - kafka-net
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka-1:
    networks:
      - kafka-net
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
  
  kafka-2:
    networks:
      - kafka-net
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29093,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:29093,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3

  kafka-3:
    networks:
      - kafka-net
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-3
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29094,EXTERNAL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:29094,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3

  kafka-setup:
    networks:
      - kafka-net
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-setup
    user: root
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...' &&
        cub kafka-ready -b kafka-1:29092,kafka-2:29093,kafka-3:29094 1 30 &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka-1:29092 --partitions 3 --replication-factor 3 --topic sensor_data &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka-1:29092 --partitions 3 --replication-factor 3 --topic processed_data &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka-1:29092 --partitions 3 --replication-factor 3 --topic alerts
      "
    environment:
      KAFKA_BROKER_ID: 999
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  producer:
    networks:
      - kafka-net
    build:
      context: ./producers
    container_name: sensor-producer
    depends_on:
      - kafka-setup
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:29092,kafka-2:29093,kafka-3:29094
      SENSOR_COUNT: 10
      SIMULATION_INTERVAL_MS: 500

  alert-consumer:
    networks:
      - kafka-net
    build:
      context: ./consumers
      dockerfile: Dockerfile.alert
    container_name: alert-consumer
    depends_on:
      - kafka-setup
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:29092,kafka-2:29093,kafka-3:29094
      CONSUMER_GROUP_ID: alert-group

  analytics-consumer:
    networks:
      - kafka-net
    build:
      context: ./consumers
      dockerfile: Dockerfile.analytics
    container_name: analytics-consumer
    depends_on:
      - kafka-setup
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:29092,kafka-2:29093,kafka-3:29094
      CONSUMER_GROUP_ID: analytics-group

  storage-consumer:
    networks:
      - kafka-net
    build:
      context: ./consumers
      dockerfile: Dockerfile.storage
    container_name: storage-consumer
    depends_on:
      - kafka-setup
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:29092,kafka-2:29093,kafka-3:29094
      CONSUMER_GROUP_ID: storage-group

  dashboard:
    networks:
      - kafka-net
    build:
      context: ./dashboard
    container_name: dashboard
    ports:
      - "5000:5000"
    depends_on:
      - analytics-consumer
    environment:
      FLASK_ENV: development

  kafdrop:
    networks:
      - kafka-net
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka-1:29092,kafka-2:29093,kafka-3:29094"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3